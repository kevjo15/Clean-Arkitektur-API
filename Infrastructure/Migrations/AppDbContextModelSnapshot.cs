// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AnimalModel");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AnimalModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AnimalModelId")
                        .HasColumnType("char(36)");

                    b.HasKey("UserId", "AnimalModelId");

                    b.HasIndex("AnimalModelId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Bird");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64e6fc0d-cc98-4471-866b-ebe9ce4427fa"),
                            Name = "Drake",
                            CanFly = false,
                            Color = "Svart"
                        },
                        new
                        {
                            Id = new Guid("c3dbeff4-eca1-4f27-b4be-8bf483414c54"),
                            Name = "Simon",
                            CanFly = false,
                            Color = "Brun"
                        },
                        new
                        {
                            Id = new Guid("e9974e8b-342b-40c0-a2c4-2a5713a15954"),
                            Name = "Gustav",
                            CanFly = false,
                            Color = "Vit"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a627a11-e4cf-4452-9f65-e8157336a53a"),
                            Name = "Nemo",
                            Breed = "Siamese",
                            LikesToPlay = false,
                            Weight = 6
                        },
                        new
                        {
                            Id = new Guid("79d0446d-f01f-4821-97ce-8b59f8b0abd0"),
                            Name = "Doris",
                            Breed = "Persian",
                            LikesToPlay = false,
                            Weight = 5
                        },
                        new
                        {
                            Id = new Guid("b7b3b501-2dda-4b78-acce-e6621fd792b6"),
                            Name = "Simba",
                            Breed = "BondeKatt",
                            LikesToPlay = false,
                            Weight = 10
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.HasBaseType("Domain.Models.Animal.AnimalModel");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.ToTable("AnimalModel", t =>
                        {
                            t.Property("Breed")
                                .HasColumnName("Dog_Breed");

                            t.Property("Weight")
                                .HasColumnName("Dog_Weight");
                        });

                    b.HasDiscriminator().HasValue("Dog");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75d8e79b-0fd6-4809-8b9a-6bc380981822"),
                            Name = "Björn",
                            Breed = "Labrador",
                            Weight = 20
                        },
                        new
                        {
                            Id = new Guid("13628268-6a69-41d3-a2fa-09e24b065081"),
                            Name = "Patrik",
                            Breed = "Golden Retriver",
                            Weight = 50
                        },
                        new
                        {
                            Id = new Guid("0f6c387e-e3bd-4580-be7f-b2ef2f33be25"),
                            Name = "Alfred",
                            Breed = "Beagle",
                            Weight = 15
                        });
                });

            modelBuilder.Entity("Domain.Models.UserAnimal", b =>
                {
                    b.HasOne("Domain.Models.Animal.AnimalModel", "AnimalModel")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnimalModel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Animal.AnimalModel", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserAnimals");
                });
#pragma warning restore 612, 618
        }
    }
}
